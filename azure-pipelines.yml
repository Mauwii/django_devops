trigger:
  batch: true
  branches:
    include:
      - refs/heads/stable
      - refs/heads/main
      - feature/*
      - issue/*
    exclude:
      - feature/experimental/*

pr:
  branches:
    include:
      - stable
      - main

variables:
  - group: django_gh
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
    readonly: true
  - name: isProduction
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/production')]
    readonly: true
  - name: isPullRequest
    value: $[eq(variables['Build.Reason'], 'PullRequest')]
    readonly: true
  - name: pythonVersion
    value: '3.9'
    readonly: true
  - name: resourceGroupName
    value: 'django_gh'
    readonly: true
  - name: location
    value: 'westeurope'
    readonly: true
  - name: azureSubscription
    value: 'django_gh'
    readonly: true
  - name: vmImageName
    value: 'ubuntu-latest'
    readonly: true

pool:
  vmImage: $(vmImageName)

stages:
  - stage: Bicep
    dependsOn:
    variables:
      - group: django-dev
      - group: django-superuser
    jobs:
      - template: azure-pipelines/jobs/validate_bicep.yml
      - ${{ if eq(variables.isMain, 'True') }}:
          - deployment: DeployBicep
            variables:
              - template: azure-pipelines/variables/main.yml
            displayName: Deploy Bicep
            environment: $(environmentName)
            strategy:
              runOnce:
                deploy:
                  steps:
                    - template: azure-pipelines/jobs/steps/deploy_bicep.yml

  - stage: Testing
    dependsOn: Bicep
    condition: in(dependencies.Bicep.result, 'Succeeded', 'Skipped')
    displayName: Run runTests
    variables:
      - group: django-dev
    jobs:
      - job: runTests
        displayName: run python tests
        steps:
          - template: azure-pipelines/jobs/steps/checkout_submodules.yml
            parameters:
              submodule: 'src/webapp'
          - template: azure-pipelines/jobs/steps/python_django_test.yml
            parameters:
              pythonVersions:
                - $(pythonVersion)

  - stage: WebApp
    dependsOn: Testing
    condition: in(dependencies.Testing.result, 'Succeeded')
    jobs:
      - template: azure-pipelines/jobs/build_webapp.yml
      - ${{ if eq(variables.isProduction, 'True') }}:
          - deployment: DeployDjango
            dependsOn: BuildWebApp
            displayName: Deploy Django to WebApp
            environment: $(environmentName)
            strategy:
              runOnce:
                deploy:
                  steps:
                    - template: azure-pipelines/jobs/steps/deploy_webapp.yml

  - stage: MkDocs
    displayName: MkDocs-Material
    dependsOn: WebApp
    condition: in(dependencies.WebApp.result, 'Succeeded')
    jobs:
      - job: buildMkDocs
        displayName: Build MkDocs-Material
        variables:
          - group: django-dev
          - group: django-superuser
        dependsOn:
        steps:
          - template: azure-pipelines/jobs/steps/build_mkdocs.yml
      - ${{ if eq(variables.isMain, 'True') }}:
          - job: deployMkDocs
            displayName: Deploy MkDocs-Material
            dependsOn:
            steps:
              - template: azure-pipelines/jobs/steps/build_mkdocs.yml
              - task: Bash@3
                displayName: Deploy to GitHub-Pages
                inputs:
                  targetType: 'inline'
                  script: 'mkdocs gh-deploy --force --clean'
