trigger:
  batch: true
  branches:
    include:
      - refs/heads/production
      - refs/heads/main

pr:
  branches:
    include:
      - production
      - main

variables:
  - group: django_gh
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: isProduction
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/production')]
  - name: isPullRequest
    value: $[eq(variables['Build.Reason'], 'PullRequest')]
  - name: pythonVersion
    value: '3.10'
  - name: resourceGroupName
    value: 'django_gh'
  - name: location
    value: 'westeurope'
  - name: azureSubscription
    value: 'django_gh'
  - name: vmImageName
    value: 'ubuntu-latest'

pool:
  vmImage: $(vmImageName)

stages:
  - stage: validateBicep
    dependsOn:
    displayName: Validate Bicep
    jobs:
      - template: azure-pipelines/jobs/validate_bicep.yml

  - stage: createResources
    displayName: Create Azure Resources
    dependsOn: validateBicep
    condition: and(succeeded(), eq(variables.isProduction, 'True'))
    jobs:
      - deployment: DeployBicep
        displayName: Create Azure Resources
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: azure-pipelines/jobs/steps/deploy_bicep.yml

  - stage: Testing
    dependsOn: createResources
    condition: in(dependencies.createResources.result, 'Succeeded', 'Skipped')
    displayName: Run runTests
    variables:
      - group: django-dev
    jobs:
      - job: runTests
        displayName: run python tests
        steps:
          - template: azure-pipelines/jobs/steps/checkout_submodules.yml
            parameters:
              submodule: django_webapp
          - template: azure-pipelines/jobs/steps/python_django_test.yml
            parameters:
              PYTHON_VERSIONS:
                - $(pythonVersion)

  - stage: WebApp
    dependsOn: Testing
    condition: in(dependencies.Testing.result, 'Succeeded')
    jobs:
      - job: BuildWebApp
        displayName: Build Web App
        steps:
          - template: azure-pipelines/jobs/steps/python_django_export_projectroot.yml

          - template: azure-pipelines/jobs/steps/get_appinsights_con_str.yml
            parameters:
              azureSubscription: $(azureSubscription)
              resourceGroupName: $(resourceGroupName)

          - template: azure-pipelines/jobs/steps/build_webapp.yml
            parameters:
              PYTHON_VERSION: $(pythonVersion)
              publishBuildArtifact: true

      - deployment: DeployDjango
        dependsOn: BuildWebApp
        condition: eq(variables.isProduction, 'True')
        displayName: Deploy Django to WebApp
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: azure-pipelines/jobs/steps/deploy_webapp.yml

  - stage: MkDocs
    dependsOn: WebApp
    condition: in(dependencies.WebApp.result, 'Succeeded')
    jobs:
      - job: buildMkDocs
        displayName: Build MkDocs-Material
        steps:
          - template: azure-pipelines/jobs/steps/checkout_submodules.yml
            parameters:
              submodule: mkdocs-material

          - template: azure-pipelines/jobs/steps/build_mkdocs.yml

          - task: Bash@3
            displayName: Deploy to GitHub-Pages
            condition: eq(variables.isProduction, 'True')
            inputs:
              targetType: 'inline'
              script: 'mkdocs gh-deploy --force --clean'
