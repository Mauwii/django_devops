parameters:
  - name: azureSubscription
  - name: resourceGroupName
  - name: projectRoot
  - name: pythonVersion
    default: '3.9'
  - name: debug
    type: boolean
    default: false

steps:
  - task: AzurePowerShell@5
    displayName: 'Read Connection String'
    name: readAppInsights
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      ScriptType: 'InlineScript'
      Inline: |
        $appInsightResource = Get-AzApplicationInsights -ResourceGroupName $(resourceGroupName)
        $APPLICATIONINSIGHTS_CONNECTION_STRING = $appInsightResource.ConnectionString
        Write-Host "##vso[task.setvariable variable=connectionString;issecret=true]$APPLICATIONINSIGHTS_CONNECTION_STRING"
      azurePowerShellVersion: 'LatestVersion'
      pwsh: true
    env:
      resourceGroupName: ${{ parameters.resourceGroupName }}

  - task: UsePythonVersion@0
    displayName: 'Use Python ${{ parameters.pythonVersion }}'
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
      addToPath: true

  - ${{ if eq(parameters.debug, true) }}:
      - script: |
          echo "Parameters:"
          echo "AZURESUBSCRIPTION: $AZURESUBSCRIPTION"
          echo "RESOURCEGROUPNAME: $RESOURCEGROUPNAME"
          echo "PROJECTROOT: $PROJECTROOT"
          echo "APPLICATIONINSIGHTS_CONNECTION_STRING: $(connectionString)"
          echo "DJANGO_SUPERUSER_EMAIL: $DJANGO_SUPERUSER_EMAIL"
          echo "DJANGO_SUPERUSER_PASSWORD: $DJANGO_SUPERUSER_PASSWORD"
          echo "With 'set':"
          set
          echo "With 'env':"
          env
        displayName: script env
        env:
          SECRET_KEY: $(secretKey)
          APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
          DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
          DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

      - task: PythonScript@0
        continueOnError: true
        displayName: Python environ
        inputs:
          script: |
            import sys
            import os
            print(os.environ)
          workingDirectory: ${{ parameters.projectRoot }}
          pythonInterpreter: '/antenv/bin/python'
          scriptSource: inline
        env:
          SECRET_KEY: $(secretKey)
          APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
          DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
          DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - script: |
      python3 -m venv antenv
      source antenv/bin/activate
      python -m pip install --upgrade pip setuptools wheel
      python -m pip install -r requirements.txt
    workingDirectory: ${{ variables.projectRoot }}
    displayName: 'Create antenv'
    env:
      SECRET_KEY: $(secretKey)
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - script: |
      python manage.py migrate
      python manage.py createsuperuser --noinput
    workingDirectory: ${{ parameters.projectRoot }}
    displayName: 'Create antenv'
    env:
      SECRET_KEY: $(secretKey)
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - task: PythonScript@0
    continueOnError: true
    displayName: Run Tests
    inputs:
      scriptSource: filePath
      scriptPath: manage.py
      arguments: test
      workingDirectory: ${{ variables.projectRoot }}
      pythonInterpreter: 'antenv/bin/python'
    env:
      SECRET_KEY: $(secretKey)
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)
