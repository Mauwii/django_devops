parameters:
  - name: azureSubscription
  - name: resourceGroupName
  - name: projectRoot
  - name: pythonVersion
    default: '3.9'
  - name: debug
    type: boolean
    default: false

steps:
  - task: AzurePowerShell@5
    displayName: 'Read Connection String'
    name: readAppInsights
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      ScriptType: 'InlineScript'
      Inline: |
        $appInsightResource = Get-AzApplicationInsights -ResourceGroupName $(resourceGroupName)
        $APPLICATIONINSIGHTS_CONNECTION_STRING = $appInsightResource.ConnectionString
        Write-Host "##vso[task.setvariable variable=connectionString;issecret=true]$APPLICATIONINSIGHTS_CONNECTION_STRING"
      azurePowerShellVersion: 'LatestVersion'
      pwsh: true
    env:
      resourceGroupName: ${{ parameters.resourceGroupName }}

  - task: UsePythonVersion@0
    displayName: 'Use Python ${{ parameters.pythonVersion }}'
    inputs:
      versionSpec: ${{ parameters.pythonVersion }}
      addToPath: true

  - script: |
      python3 -m venv antenv
    displayName: install antenv
    workingDirectory: ${{ parameters.projectRoot }}

  - script: |
      source antenv/bin/activate
      python3 -m pip install --upgrade pip setuptools wheel
      python3 -m pip install -r requirements.txt
    workingDirectory: ${{ parameters.projectRoot }}
    displayName: 'Install tools and Requirements'

  - ${{ if eq(parameters.debug, true) }}:
      - script: |
          echo "Parameters:"
          echo "SECRETKEY: $SECRETKEY"                                        # no
          echo "SECRET_KEY: $SECRET_KEY"                                      # no
          ## --------------------------------------------------------------- ##
          echo "AZURESUBSCRIPTION: $AZURESUBSCRIPTION"                        # yes
          echo "RESOURCEGROUPNAME: $RESOURCEGROUPNAME"                        # yes
          echo "PROJECTROOT: $PROJECTROOT"                                    # yes
          echo "APPLICATIONINSIGHTS_CONNECTION_STRING: $(connectionString)"   # yes
          echo "DJANGO_SUPERUSER_EMAIL: $DJANGO_SUPERUSER_EMAIL"              # yes
          echo "DJANGO_SUPERUSER_PASSWORD: $DJANGO_SUPERUSER_PASSWORD"        # yes
          echo "secretKey: $(secretKey)"                                      # yes
          ## --------------------------------------------------------------- ##
          echo "With 'set':"
          set
          echo "With 'env':"
          env
        displayName: debug script env
        continueOnError: true
        env:
          SECRET_KEY: ${{ variables.secretKey }}
          APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
          DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
          DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

      - task: PythonScript@0
        displayName: debug py ${{ parameters.pythonVersion }} environ
        continueOnError: true
        inputs:
          script: |
            import sys
            import os
            print(os.environ)
          workingDirectory: ${{ parameters.projectRoot }}
          scriptSource: inline
        env:
          SECRET_KEY: $(secretKey)
          APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
          DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
          DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - script: |
      export SECRET_KEY="$(secretKey)"
      export APPLICATIONINSIGHTS_CONNECTION_STRING="$(connectionString)"
      source antenv/bin/activate
      python3 manage.py migrate
      python3 manage.py createsuperuser --noinput
      python3 manage.py test
    workingDirectory: ${{ parameters.projectRoot }}
    displayName: 'migrate and create superuser'
    env:
      SECRET_KEY: ${{ variables.secretKey }}
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - task: PythonScript@0
    displayName: Run py Tests
    continueOnError: true
    inputs:
      scriptSource: filePath
      scriptPath: 'django_webapp/manage.py'
      arguments: test
      workingDirectory: ${{ parameters.projectRoot }}
      # pythonInterpreter: antenv/bin/python
    env:
      PYTHONPATH: '${{ parameters.projectRoot }}/antenv/lib/python3.9:${{ parameters.projectRoot }}/antenv/lib/python3.9/site-packages'
      SECRET_KEY: ${{ variables.secretKey }}
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)

  - script: |
      export SECRET_KEY="$(secretKey)"
      export APPLICATIONINSIGHTS_CONNECTION_STRING="$(connectionString)"
      source antenv/bin/activate
      env
      set
      python3 manage.py test
    workingDirectory: ${{ parameters.projectRoot }}
    displayName: 'script run tests'
    env:
      SECRET_KEY: ${{ variables.secretKey }}
      APPLICATIONINSIGHTS_CONNECTION_STRING: $(readAppInsights.connectionString)
      DJANGO_SUPERUSER_EMAIL: $(DJANGO_SUPERUSER_EMAIL)
      DJANGO_SUPERUSER_PASSWORD: $(DJANGO_SUPERUSER_PASSWORD)
